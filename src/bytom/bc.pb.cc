// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bc.proto

#include "bc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace bc {
class HashDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hash>
      _instance;
} _Hash_default_instance_;
class ProgramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Program>
      _instance;
} _Program_default_instance_;
class AssetIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetID>
      _instance;
} _AssetID_default_instance_;
class AssetAmountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetAmount>
      _instance;
} _AssetAmount_default_instance_;
class AssetDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetDefinition>
      _instance;
} _AssetDefinition_default_instance_;
class ValueSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueSource>
      _instance;
} _ValueSource_default_instance_;
class ValueDestinationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueDestination>
      _instance;
} _ValueDestination_default_instance_;
class BlockHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockHeader>
      _instance;
} _BlockHeader_default_instance_;
class TxHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxHeader>
      _instance;
} _TxHeader_default_instance_;
class TxVerifyResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxVerifyResult>
      _instance;
} _TxVerifyResult_default_instance_;
class TransactionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionStatus>
      _instance;
} _TransactionStatus_default_instance_;
class MuxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mux>
      _instance;
} _Mux_default_instance_;
class CoinbaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coinbase>
      _instance;
} _Coinbase_default_instance_;
class OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Output>
      _instance;
} _Output_default_instance_;
class RetirementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Retirement>
      _instance;
} _Retirement_default_instance_;
class IssuanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Issuance>
      _instance;
} _Issuance_default_instance_;
class SpendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Spend>
      _instance;
} _Spend_default_instance_;
}  // namespace bc
namespace protobuf_bc_2eproto {
void InitDefaultsHashImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bc::_Hash_default_instance_;
    new (ptr) ::bc::Hash();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Hash::InitAsDefaultInstance();
}

void InitDefaultsHash() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashImpl);
}

void InitDefaultsProgramImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bc::_Program_default_instance_;
    new (ptr) ::bc::Program();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Program::InitAsDefaultInstance();
}

void InitDefaultsProgram() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProgramImpl);
}

void InitDefaultsAssetIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bc::_AssetID_default_instance_;
    new (ptr) ::bc::AssetID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::AssetID::InitAsDefaultInstance();
}

void InitDefaultsAssetID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAssetIDImpl);
}

void InitDefaultsAssetAmountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsAssetID();
  {
    void* ptr = &::bc::_AssetAmount_default_instance_;
    new (ptr) ::bc::AssetAmount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::AssetAmount::InitAsDefaultInstance();
}

void InitDefaultsAssetAmount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAssetAmountImpl);
}

void InitDefaultsAssetDefinitionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsProgram();
  protobuf_bc_2eproto::InitDefaultsHash();
  {
    void* ptr = &::bc::_AssetDefinition_default_instance_;
    new (ptr) ::bc::AssetDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::AssetDefinition::InitAsDefaultInstance();
}

void InitDefaultsAssetDefinition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAssetDefinitionImpl);
}

void InitDefaultsValueSourceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsHash();
  protobuf_bc_2eproto::InitDefaultsAssetAmount();
  {
    void* ptr = &::bc::_ValueSource_default_instance_;
    new (ptr) ::bc::ValueSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::ValueSource::InitAsDefaultInstance();
}

void InitDefaultsValueSource() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValueSourceImpl);
}

void InitDefaultsValueDestinationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsHash();
  protobuf_bc_2eproto::InitDefaultsAssetAmount();
  {
    void* ptr = &::bc::_ValueDestination_default_instance_;
    new (ptr) ::bc::ValueDestination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::ValueDestination::InitAsDefaultInstance();
}

void InitDefaultsValueDestination() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValueDestinationImpl);
}

void InitDefaultsBlockHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsHash();
  protobuf_bc_2eproto::InitDefaultsTransactionStatus();
  {
    void* ptr = &::bc::_BlockHeader_default_instance_;
    new (ptr) ::bc::BlockHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::BlockHeader::InitAsDefaultInstance();
}

void InitDefaultsBlockHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlockHeaderImpl);
}

void InitDefaultsTxHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsHash();
  {
    void* ptr = &::bc::_TxHeader_default_instance_;
    new (ptr) ::bc::TxHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::TxHeader::InitAsDefaultInstance();
}

void InitDefaultsTxHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTxHeaderImpl);
}

void InitDefaultsTxVerifyResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bc::_TxVerifyResult_default_instance_;
    new (ptr) ::bc::TxVerifyResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::TxVerifyResult::InitAsDefaultInstance();
}

void InitDefaultsTxVerifyResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTxVerifyResultImpl);
}

void InitDefaultsTransactionStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsTxVerifyResult();
  {
    void* ptr = &::bc::_TransactionStatus_default_instance_;
    new (ptr) ::bc::TransactionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::TransactionStatus::InitAsDefaultInstance();
}

void InitDefaultsTransactionStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionStatusImpl);
}

void InitDefaultsMuxImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsValueSource();
  protobuf_bc_2eproto::InitDefaultsProgram();
  protobuf_bc_2eproto::InitDefaultsValueDestination();
  {
    void* ptr = &::bc::_Mux_default_instance_;
    new (ptr) ::bc::Mux();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Mux::InitAsDefaultInstance();
}

void InitDefaultsMux() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMuxImpl);
}

void InitDefaultsCoinbaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsValueDestination();
  {
    void* ptr = &::bc::_Coinbase_default_instance_;
    new (ptr) ::bc::Coinbase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Coinbase::InitAsDefaultInstance();
}

void InitDefaultsCoinbase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCoinbaseImpl);
}

void InitDefaultsOutputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsValueSource();
  protobuf_bc_2eproto::InitDefaultsProgram();
  {
    void* ptr = &::bc::_Output_default_instance_;
    new (ptr) ::bc::Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Output::InitAsDefaultInstance();
}

void InitDefaultsOutput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOutputImpl);
}

void InitDefaultsRetirementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsValueSource();
  {
    void* ptr = &::bc::_Retirement_default_instance_;
    new (ptr) ::bc::Retirement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Retirement::InitAsDefaultInstance();
}

void InitDefaultsRetirement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRetirementImpl);
}

void InitDefaultsIssuanceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsHash();
  protobuf_bc_2eproto::InitDefaultsAssetAmount();
  protobuf_bc_2eproto::InitDefaultsValueDestination();
  protobuf_bc_2eproto::InitDefaultsAssetDefinition();
  {
    void* ptr = &::bc::_Issuance_default_instance_;
    new (ptr) ::bc::Issuance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Issuance::InitAsDefaultInstance();
}

void InitDefaultsIssuance() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIssuanceImpl);
}

void InitDefaultsSpendImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bc_2eproto::InitDefaultsHash();
  protobuf_bc_2eproto::InitDefaultsValueDestination();
  {
    void* ptr = &::bc::_Spend_default_instance_;
    new (ptr) ::bc::Spend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bc::Spend::InitAsDefaultInstance();
}

void InitDefaultsSpend() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpendImpl);
}

::google::protobuf::Metadata file_level_metadata[17];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Hash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Hash, v0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Hash, v1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Hash, v2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Hash, v3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Program, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Program, vm_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Program, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetID, v0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetID, v1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetID, v2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetID, v3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetAmount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetAmount, asset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetAmount, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetDefinition, issuance_program_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::AssetDefinition, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueSource, ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueSource, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueSource, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueDestination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueDestination, ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueDestination, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::ValueDestination, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, previous_block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, transactions_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, transaction_status_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::BlockHeader, transaction_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxHeader, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxHeader, serialized_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxHeader, time_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxHeader, result_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxVerifyResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TxVerifyResult, status_fail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TransactionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TransactionStatus, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::TransactionStatus, verify_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Mux, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Mux, sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Mux, program_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Mux, witness_destinations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Mux, witness_arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Coinbase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Coinbase, witness_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Coinbase, arbitrary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Output, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Output, control_program_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Output, ordinal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Retirement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Retirement, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Retirement, ordinal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, nonce_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, witness_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, witness_asset_definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, witness_arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Issuance, ordinal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Spend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Spend, spent_output_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Spend, witness_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Spend, witness_arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bc::Spend, ordinal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bc::Hash)},
  { 9, -1, sizeof(::bc::Program)},
  { 16, -1, sizeof(::bc::AssetID)},
  { 25, -1, sizeof(::bc::AssetAmount)},
  { 32, -1, sizeof(::bc::AssetDefinition)},
  { 39, -1, sizeof(::bc::ValueSource)},
  { 47, -1, sizeof(::bc::ValueDestination)},
  { 55, -1, sizeof(::bc::BlockHeader)},
  { 69, -1, sizeof(::bc::TxHeader)},
  { 78, -1, sizeof(::bc::TxVerifyResult)},
  { 84, -1, sizeof(::bc::TransactionStatus)},
  { 91, -1, sizeof(::bc::Mux)},
  { 100, -1, sizeof(::bc::Coinbase)},
  { 107, -1, sizeof(::bc::Output)},
  { 115, -1, sizeof(::bc::Retirement)},
  { 122, -1, sizeof(::bc::Issuance)},
  { 133, -1, sizeof(::bc::Spend)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Hash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Program_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_AssetID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_AssetAmount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_AssetDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_ValueSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_ValueDestination_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_BlockHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_TxHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_TxVerifyResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_TransactionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Mux_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Coinbase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Retirement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Issuance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bc::_Spend_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010bc.proto\022\002bc\"6\n\004Hash\022\n\n\002v0\030\001 \001(\006\022\n\n\002v1"
      "\030\002 \001(\006\022\n\n\002v2\030\003 \001(\006\022\n\n\002v3\030\004 \001(\006\"+\n\007Progra"
      "m\022\022\n\nvm_version\030\001 \001(\004\022\014\n\004code\030\002 \001(\014\"9\n\007A"
      "ssetID\022\n\n\002v0\030\001 \001(\006\022\n\n\002v1\030\002 \001(\006\022\n\n\002v2\030\003 \001"
      "(\006\022\n\n\002v3\030\004 \001(\006\"<\n\013AssetAmount\022\035\n\010asset_i"
      "d\030\001 \001(\0132\013.bc.AssetID\022\016\n\006amount\030\002 \001(\004\"P\n\017"
      "AssetDefinition\022%\n\020issuance_program\030\001 \001("
      "\0132\013.bc.Program\022\026\n\004data\030\002 \001(\0132\010.bc.Hash\"V"
      "\n\013ValueSource\022\025\n\003ref\030\001 \001(\0132\010.bc.Hash\022\036\n\005"
      "value\030\002 \001(\0132\017.bc.AssetAmount\022\020\n\010position"
      "\030\003 \001(\004\"[\n\020ValueDestination\022\025\n\003ref\030\001 \001(\0132"
      "\010.bc.Hash\022\036\n\005value\030\002 \001(\0132\017.bc.AssetAmoun"
      "t\022\020\n\010position\030\003 \001(\004\"\206\002\n\013BlockHeader\022\017\n\007v"
      "ersion\030\001 \001(\004\022\016\n\006height\030\002 \001(\004\022#\n\021previous"
      "_block_id\030\003 \001(\0132\010.bc.Hash\022\021\n\ttimestamp\030\004"
      " \001(\004\022#\n\021transactions_root\030\005 \001(\0132\010.bc.Has"
      "h\022)\n\027transaction_status_hash\030\006 \001(\0132\010.bc."
      "Hash\022\r\n\005nonce\030\007 \001(\004\022\014\n\004bits\030\010 \001(\004\0221\n\022tra"
      "nsaction_status\030\t \001(\0132\025.bc.TransactionSt"
      "atus\"f\n\010TxHeader\022\017\n\007version\030\001 \001(\004\022\027\n\017ser"
      "ialized_size\030\002 \001(\004\022\022\n\ntime_range\030\003 \001(\004\022\034"
      "\n\nresult_ids\030\004 \003(\0132\010.bc.Hash\"%\n\016TxVerify"
      "Result\022\023\n\013status_fail\030\001 \001(\010\"O\n\021Transacti"
      "onStatus\022\017\n\007version\030\001 \001(\004\022)\n\rverify_stat"
      "us\030\002 \003(\0132\022.bc.TxVerifyResult\"\224\001\n\003Mux\022 \n\007"
      "sources\030\001 \003(\0132\017.bc.ValueSource\022\034\n\007progra"
      "m\030\002 \001(\0132\013.bc.Program\0222\n\024witness_destinat"
      "ions\030\003 \003(\0132\024.bc.ValueDestination\022\031\n\021witn"
      "ess_arguments\030\004 \003(\014\"P\n\010Coinbase\0221\n\023witne"
      "ss_destination\030\001 \001(\0132\024.bc.ValueDestinati"
      "on\022\021\n\tarbitrary\030\002 \001(\014\"`\n\006Output\022\037\n\006sourc"
      "e\030\001 \001(\0132\017.bc.ValueSource\022$\n\017control_prog"
      "ram\030\002 \001(\0132\013.bc.Program\022\017\n\007ordinal\030\003 \001(\004\""
      ">\n\nRetirement\022\037\n\006source\030\001 \001(\0132\017.bc.Value"
      "Source\022\017\n\007ordinal\030\002 \001(\004\"\336\001\n\010Issuance\022\034\n\n"
      "nonce_hash\030\001 \001(\0132\010.bc.Hash\022\036\n\005value\030\002 \001("
      "\0132\017.bc.AssetAmount\0221\n\023witness_destinatio"
      "n\030\003 \001(\0132\024.bc.ValueDestination\0225\n\030witness"
      "_asset_definition\030\004 \001(\0132\023.bc.AssetDefini"
      "tion\022\031\n\021witness_arguments\030\005 \003(\014\022\017\n\007ordin"
      "al\030\006 \001(\004\"\211\001\n\005Spend\022!\n\017spent_output_id\030\001 "
      "\001(\0132\010.bc.Hash\0221\n\023witness_destination\030\002 \001"
      "(\0132\024.bc.ValueDestination\022\031\n\021witness_argu"
      "ments\030\003 \003(\014\022\017\n\007ordinal\030\004 \001(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1756);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bc_2eproto
namespace bc {

// ===================================================================

void Hash::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hash::kV0FieldNumber;
const int Hash::kV1FieldNumber;
const int Hash::kV2FieldNumber;
const int Hash::kV3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hash::Hash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsHash();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Hash)
}
Hash::Hash(const Hash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&v0_, &from.v0_,
    static_cast<size_t>(reinterpret_cast<char*>(&v3_) -
    reinterpret_cast<char*>(&v0_)) + sizeof(v3_));
  // @@protoc_insertion_point(copy_constructor:bc.Hash)
}

void Hash::SharedCtor() {
  ::memset(&v0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v3_) -
      reinterpret_cast<char*>(&v0_)) + sizeof(v3_));
  _cached_size_ = 0;
}

Hash::~Hash() {
  // @@protoc_insertion_point(destructor:bc.Hash)
  SharedDtor();
}

void Hash::SharedDtor() {
}

void Hash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hash::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hash& Hash::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsHash();
  return *internal_default_instance();
}

Hash* Hash::New(::google::protobuf::Arena* arena) const {
  Hash* n = new Hash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Hash::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&v0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v3_) -
      reinterpret_cast<char*>(&v0_)) + sizeof(v3_));
  _internal_metadata_.Clear();
}

bool Hash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Hash)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 v0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Hash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Hash)
  return false;
#undef DO_
}

void Hash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 v0 = 1;
  if (this->v0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->v0(), output);
  }

  // fixed64 v1 = 2;
  if (this->v1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->v1(), output);
  }

  // fixed64 v2 = 3;
  if (this->v2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->v2(), output);
  }

  // fixed64 v3 = 4;
  if (this->v3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->v3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Hash)
}

::google::protobuf::uint8* Hash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 v0 = 1;
  if (this->v0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->v0(), target);
  }

  // fixed64 v1 = 2;
  if (this->v1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->v1(), target);
  }

  // fixed64 v2 = 3;
  if (this->v2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->v2(), target);
  }

  // fixed64 v3 = 4;
  if (this->v3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->v3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Hash)
  return target;
}

size_t Hash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Hash)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed64 v0 = 1;
  if (this->v0() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 v1 = 2;
  if (this->v1() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 v2 = 3;
  if (this->v2() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 v3 = 4;
  if (this->v3() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  const Hash* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Hash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Hash)
    MergeFrom(*source);
  }
}

void Hash::MergeFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.v0() != 0) {
    set_v0(from.v0());
  }
  if (from.v1() != 0) {
    set_v1(from.v1());
  }
  if (from.v2() != 0) {
    set_v2(from.v2());
  }
  if (from.v3() != 0) {
    set_v3(from.v3());
  }
}

void Hash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hash::CopyFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hash::IsInitialized() const {
  return true;
}

void Hash::Swap(Hash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hash::InternalSwap(Hash* other) {
  using std::swap;
  swap(v0_, other->v0_);
  swap(v1_, other->v1_);
  swap(v2_, other->v2_);
  swap(v3_, other->v3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Hash::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Program::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Program::kVmVersionFieldNumber;
const int Program::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Program::Program()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsProgram();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Program)
}
Program::Program(const Program& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  vm_version_ = from.vm_version_;
  // @@protoc_insertion_point(copy_constructor:bc.Program)
}

void Program::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_version_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Program::~Program() {
  // @@protoc_insertion_point(destructor:bc.Program)
  SharedDtor();
}

void Program::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Program::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Program::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Program& Program::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsProgram();
  return *internal_default_instance();
}

Program* Program::New(::google::protobuf::Arena* arena) const {
  Program* n = new Program;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Program::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Program::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Program)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 vm_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vm_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Program)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Program)
  return false;
#undef DO_
}

void Program::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 vm_version = 1;
  if (this->vm_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->vm_version(), output);
  }

  // bytes code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Program)
}

::google::protobuf::uint8* Program::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 vm_version = 1;
  if (this->vm_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->vm_version(), target);
  }

  // bytes code = 2;
  if (this->code().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Program)
  return target;
}

size_t Program::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Program)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  // uint64 vm_version = 1;
  if (this->vm_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->vm_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Program::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Program)
  GOOGLE_DCHECK_NE(&from, this);
  const Program* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Program>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Program)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Program)
    MergeFrom(*source);
  }
}

void Program::MergeFrom(const Program& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Program)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.vm_version() != 0) {
    set_vm_version(from.vm_version());
  }
}

void Program::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Program::CopyFrom(const Program& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Program::IsInitialized() const {
  return true;
}

void Program::Swap(Program* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Program::InternalSwap(Program* other) {
  using std::swap;
  code_.Swap(&other->code_);
  swap(vm_version_, other->vm_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Program::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetID::kV0FieldNumber;
const int AssetID::kV1FieldNumber;
const int AssetID::kV2FieldNumber;
const int AssetID::kV3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetID::AssetID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsAssetID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.AssetID)
}
AssetID::AssetID(const AssetID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&v0_, &from.v0_,
    static_cast<size_t>(reinterpret_cast<char*>(&v3_) -
    reinterpret_cast<char*>(&v0_)) + sizeof(v3_));
  // @@protoc_insertion_point(copy_constructor:bc.AssetID)
}

void AssetID::SharedCtor() {
  ::memset(&v0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v3_) -
      reinterpret_cast<char*>(&v0_)) + sizeof(v3_));
  _cached_size_ = 0;
}

AssetID::~AssetID() {
  // @@protoc_insertion_point(destructor:bc.AssetID)
  SharedDtor();
}

void AssetID::SharedDtor() {
}

void AssetID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetID::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetID& AssetID::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsAssetID();
  return *internal_default_instance();
}

AssetID* AssetID::New(::google::protobuf::Arena* arena) const {
  AssetID* n = new AssetID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetID::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.AssetID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&v0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v3_) -
      reinterpret_cast<char*>(&v0_)) + sizeof(v3_));
  _internal_metadata_.Clear();
}

bool AssetID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.AssetID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 v0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &v3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.AssetID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.AssetID)
  return false;
#undef DO_
}

void AssetID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.AssetID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 v0 = 1;
  if (this->v0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->v0(), output);
  }

  // fixed64 v1 = 2;
  if (this->v1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->v1(), output);
  }

  // fixed64 v2 = 3;
  if (this->v2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->v2(), output);
  }

  // fixed64 v3 = 4;
  if (this->v3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->v3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.AssetID)
}

::google::protobuf::uint8* AssetID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.AssetID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 v0 = 1;
  if (this->v0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->v0(), target);
  }

  // fixed64 v1 = 2;
  if (this->v1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->v1(), target);
  }

  // fixed64 v2 = 3;
  if (this->v2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->v2(), target);
  }

  // fixed64 v3 = 4;
  if (this->v3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->v3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.AssetID)
  return target;
}

size_t AssetID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.AssetID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed64 v0 = 1;
  if (this->v0() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 v1 = 2;
  if (this->v1() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 v2 = 3;
  if (this->v2() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 v3 = 4;
  if (this->v3() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.AssetID)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.AssetID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.AssetID)
    MergeFrom(*source);
  }
}

void AssetID::MergeFrom(const AssetID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.AssetID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.v0() != 0) {
    set_v0(from.v0());
  }
  if (from.v1() != 0) {
    set_v1(from.v1());
  }
  if (from.v2() != 0) {
    set_v2(from.v2());
  }
  if (from.v3() != 0) {
    set_v3(from.v3());
  }
}

void AssetID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.AssetID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetID::CopyFrom(const AssetID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.AssetID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetID::IsInitialized() const {
  return true;
}

void AssetID::Swap(AssetID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetID::InternalSwap(AssetID* other) {
  using std::swap;
  swap(v0_, other->v0_);
  swap(v1_, other->v1_);
  swap(v2_, other->v2_);
  swap(v3_, other->v3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetID::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetAmount::InitAsDefaultInstance() {
  ::bc::_AssetAmount_default_instance_._instance.get_mutable()->asset_id_ = const_cast< ::bc::AssetID*>(
      ::bc::AssetID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetAmount::kAssetIdFieldNumber;
const int AssetAmount::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetAmount::AssetAmount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsAssetAmount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.AssetAmount)
}
AssetAmount::AssetAmount(const AssetAmount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_asset_id()) {
    asset_id_ = new ::bc::AssetID(*from.asset_id_);
  } else {
    asset_id_ = NULL;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bc.AssetAmount)
}

void AssetAmount::SharedCtor() {
  ::memset(&asset_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&asset_id_)) + sizeof(amount_));
  _cached_size_ = 0;
}

AssetAmount::~AssetAmount() {
  // @@protoc_insertion_point(destructor:bc.AssetAmount)
  SharedDtor();
}

void AssetAmount::SharedDtor() {
  if (this != internal_default_instance()) delete asset_id_;
}

void AssetAmount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetAmount::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetAmount& AssetAmount::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsAssetAmount();
  return *internal_default_instance();
}

AssetAmount* AssetAmount::New(::google::protobuf::Arena* arena) const {
  AssetAmount* n = new AssetAmount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetAmount::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.AssetAmount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && asset_id_ != NULL) {
    delete asset_id_;
  }
  asset_id_ = NULL;
  amount_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool AssetAmount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.AssetAmount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.AssetID asset_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asset_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.AssetAmount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.AssetAmount)
  return false;
#undef DO_
}

void AssetAmount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.AssetAmount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.AssetID asset_id = 1;
  if (this->has_asset_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->asset_id_, output);
  }

  // uint64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.AssetAmount)
}

::google::protobuf::uint8* AssetAmount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.AssetAmount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.AssetID asset_id = 1;
  if (this->has_asset_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->asset_id_, deterministic, target);
  }

  // uint64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.AssetAmount)
  return target;
}

size_t AssetAmount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.AssetAmount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.AssetID asset_id = 1;
  if (this->has_asset_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->asset_id_);
  }

  // uint64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetAmount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.AssetAmount)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetAmount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetAmount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.AssetAmount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.AssetAmount)
    MergeFrom(*source);
  }
}

void AssetAmount::MergeFrom(const AssetAmount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.AssetAmount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_asset_id()) {
    mutable_asset_id()->::bc::AssetID::MergeFrom(from.asset_id());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void AssetAmount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.AssetAmount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetAmount::CopyFrom(const AssetAmount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.AssetAmount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetAmount::IsInitialized() const {
  return true;
}

void AssetAmount::Swap(AssetAmount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetAmount::InternalSwap(AssetAmount* other) {
  using std::swap;
  swap(asset_id_, other->asset_id_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetAmount::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetDefinition::InitAsDefaultInstance() {
  ::bc::_AssetDefinition_default_instance_._instance.get_mutable()->issuance_program_ = const_cast< ::bc::Program*>(
      ::bc::Program::internal_default_instance());
  ::bc::_AssetDefinition_default_instance_._instance.get_mutable()->data_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetDefinition::kIssuanceProgramFieldNumber;
const int AssetDefinition::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetDefinition::AssetDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsAssetDefinition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.AssetDefinition)
}
AssetDefinition::AssetDefinition(const AssetDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_issuance_program()) {
    issuance_program_ = new ::bc::Program(*from.issuance_program_);
  } else {
    issuance_program_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::bc::Hash(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bc.AssetDefinition)
}

void AssetDefinition::SharedCtor() {
  ::memset(&issuance_program_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&issuance_program_)) + sizeof(data_));
  _cached_size_ = 0;
}

AssetDefinition::~AssetDefinition() {
  // @@protoc_insertion_point(destructor:bc.AssetDefinition)
  SharedDtor();
}

void AssetDefinition::SharedDtor() {
  if (this != internal_default_instance()) delete issuance_program_;
  if (this != internal_default_instance()) delete data_;
}

void AssetDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetDefinition::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetDefinition& AssetDefinition::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsAssetDefinition();
  return *internal_default_instance();
}

AssetDefinition* AssetDefinition::New(::google::protobuf::Arena* arena) const {
  AssetDefinition* n = new AssetDefinition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.AssetDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && issuance_program_ != NULL) {
    delete issuance_program_;
  }
  issuance_program_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool AssetDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.AssetDefinition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.Program issuance_program = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issuance_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.Hash data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.AssetDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.AssetDefinition)
  return false;
#undef DO_
}

void AssetDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.AssetDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Program issuance_program = 1;
  if (this->has_issuance_program()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->issuance_program_, output);
  }

  // .bc.Hash data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.AssetDefinition)
}

::google::protobuf::uint8* AssetDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.AssetDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Program issuance_program = 1;
  if (this->has_issuance_program()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->issuance_program_, deterministic, target);
  }

  // .bc.Hash data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.AssetDefinition)
  return target;
}

size_t AssetDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.AssetDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.Program issuance_program = 1;
  if (this->has_issuance_program()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->issuance_program_);
  }

  // .bc.Hash data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.AssetDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.AssetDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.AssetDefinition)
    MergeFrom(*source);
  }
}

void AssetDefinition::MergeFrom(const AssetDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.AssetDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_issuance_program()) {
    mutable_issuance_program()->::bc::Program::MergeFrom(from.issuance_program());
  }
  if (from.has_data()) {
    mutable_data()->::bc::Hash::MergeFrom(from.data());
  }
}

void AssetDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.AssetDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetDefinition::CopyFrom(const AssetDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.AssetDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetDefinition::IsInitialized() const {
  return true;
}

void AssetDefinition::Swap(AssetDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetDefinition::InternalSwap(AssetDefinition* other) {
  using std::swap;
  swap(issuance_program_, other->issuance_program_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetDefinition::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueSource::InitAsDefaultInstance() {
  ::bc::_ValueSource_default_instance_._instance.get_mutable()->ref_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_ValueSource_default_instance_._instance.get_mutable()->value_ = const_cast< ::bc::AssetAmount*>(
      ::bc::AssetAmount::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueSource::kRefFieldNumber;
const int ValueSource::kValueFieldNumber;
const int ValueSource::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueSource::ValueSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsValueSource();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.ValueSource)
}
ValueSource::ValueSource(const ValueSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ref()) {
    ref_ = new ::bc::Hash(*from.ref_);
  } else {
    ref_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::bc::AssetAmount(*from.value_);
  } else {
    value_ = NULL;
  }
  position_ = from.position_;
  // @@protoc_insertion_point(copy_constructor:bc.ValueSource)
}

void ValueSource::SharedCtor() {
  ::memset(&ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&ref_)) + sizeof(position_));
  _cached_size_ = 0;
}

ValueSource::~ValueSource() {
  // @@protoc_insertion_point(destructor:bc.ValueSource)
  SharedDtor();
}

void ValueSource::SharedDtor() {
  if (this != internal_default_instance()) delete ref_;
  if (this != internal_default_instance()) delete value_;
}

void ValueSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueSource::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueSource& ValueSource::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsValueSource();
  return *internal_default_instance();
}

ValueSource* ValueSource::New(::google::protobuf::Arena* arena) const {
  ValueSource* n = new ValueSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueSource::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.ValueSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ref_ != NULL) {
    delete ref_;
  }
  ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  position_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ValueSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.ValueSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.Hash ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.AssetAmount value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.ValueSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.ValueSource)
  return false;
#undef DO_
}

void ValueSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.ValueSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash ref = 1;
  if (this->has_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ref_, output);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // uint64 position = 3;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.ValueSource)
}

::google::protobuf::uint8* ValueSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.ValueSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash ref = 1;
  if (this->has_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->ref_, deterministic, target);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->value_, deterministic, target);
  }

  // uint64 position = 3;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->position(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.ValueSource)
  return target;
}

size_t ValueSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.ValueSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.Hash ref = 1;
  if (this->has_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ref_);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  // uint64 position = 3;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.ValueSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.ValueSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.ValueSource)
    MergeFrom(*source);
  }
}

void ValueSource::MergeFrom(const ValueSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.ValueSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ref()) {
    mutable_ref()->::bc::Hash::MergeFrom(from.ref());
  }
  if (from.has_value()) {
    mutable_value()->::bc::AssetAmount::MergeFrom(from.value());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void ValueSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.ValueSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueSource::CopyFrom(const ValueSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.ValueSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueSource::IsInitialized() const {
  return true;
}

void ValueSource::Swap(ValueSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueSource::InternalSwap(ValueSource* other) {
  using std::swap;
  swap(ref_, other->ref_);
  swap(value_, other->value_);
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueSource::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueDestination::InitAsDefaultInstance() {
  ::bc::_ValueDestination_default_instance_._instance.get_mutable()->ref_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_ValueDestination_default_instance_._instance.get_mutable()->value_ = const_cast< ::bc::AssetAmount*>(
      ::bc::AssetAmount::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueDestination::kRefFieldNumber;
const int ValueDestination::kValueFieldNumber;
const int ValueDestination::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueDestination::ValueDestination()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsValueDestination();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.ValueDestination)
}
ValueDestination::ValueDestination(const ValueDestination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ref()) {
    ref_ = new ::bc::Hash(*from.ref_);
  } else {
    ref_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::bc::AssetAmount(*from.value_);
  } else {
    value_ = NULL;
  }
  position_ = from.position_;
  // @@protoc_insertion_point(copy_constructor:bc.ValueDestination)
}

void ValueDestination::SharedCtor() {
  ::memset(&ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&ref_)) + sizeof(position_));
  _cached_size_ = 0;
}

ValueDestination::~ValueDestination() {
  // @@protoc_insertion_point(destructor:bc.ValueDestination)
  SharedDtor();
}

void ValueDestination::SharedDtor() {
  if (this != internal_default_instance()) delete ref_;
  if (this != internal_default_instance()) delete value_;
}

void ValueDestination::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueDestination::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueDestination& ValueDestination::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsValueDestination();
  return *internal_default_instance();
}

ValueDestination* ValueDestination::New(::google::protobuf::Arena* arena) const {
  ValueDestination* n = new ValueDestination;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.ValueDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ref_ != NULL) {
    delete ref_;
  }
  ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  position_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ValueDestination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.ValueDestination)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.Hash ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.AssetAmount value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.ValueDestination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.ValueDestination)
  return false;
#undef DO_
}

void ValueDestination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.ValueDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash ref = 1;
  if (this->has_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ref_, output);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // uint64 position = 3;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.ValueDestination)
}

::google::protobuf::uint8* ValueDestination::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.ValueDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash ref = 1;
  if (this->has_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->ref_, deterministic, target);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->value_, deterministic, target);
  }

  // uint64 position = 3;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->position(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.ValueDestination)
  return target;
}

size_t ValueDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.ValueDestination)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.Hash ref = 1;
  if (this->has_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ref_);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  // uint64 position = 3;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueDestination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.ValueDestination)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueDestination* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueDestination>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.ValueDestination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.ValueDestination)
    MergeFrom(*source);
  }
}

void ValueDestination::MergeFrom(const ValueDestination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.ValueDestination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ref()) {
    mutable_ref()->::bc::Hash::MergeFrom(from.ref());
  }
  if (from.has_value()) {
    mutable_value()->::bc::AssetAmount::MergeFrom(from.value());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void ValueDestination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.ValueDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueDestination::CopyFrom(const ValueDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.ValueDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueDestination::IsInitialized() const {
  return true;
}

void ValueDestination::Swap(ValueDestination* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueDestination::InternalSwap(ValueDestination* other) {
  using std::swap;
  swap(ref_, other->ref_);
  swap(value_, other->value_);
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueDestination::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockHeader::InitAsDefaultInstance() {
  ::bc::_BlockHeader_default_instance_._instance.get_mutable()->previous_block_id_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_BlockHeader_default_instance_._instance.get_mutable()->transactions_root_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_BlockHeader_default_instance_._instance.get_mutable()->transaction_status_hash_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_BlockHeader_default_instance_._instance.get_mutable()->transaction_status_ = const_cast< ::bc::TransactionStatus*>(
      ::bc::TransactionStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockHeader::kVersionFieldNumber;
const int BlockHeader::kHeightFieldNumber;
const int BlockHeader::kPreviousBlockIdFieldNumber;
const int BlockHeader::kTimestampFieldNumber;
const int BlockHeader::kTransactionsRootFieldNumber;
const int BlockHeader::kTransactionStatusHashFieldNumber;
const int BlockHeader::kNonceFieldNumber;
const int BlockHeader::kBitsFieldNumber;
const int BlockHeader::kTransactionStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockHeader::BlockHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsBlockHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.BlockHeader)
}
BlockHeader::BlockHeader(const BlockHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_previous_block_id()) {
    previous_block_id_ = new ::bc::Hash(*from.previous_block_id_);
  } else {
    previous_block_id_ = NULL;
  }
  if (from.has_transactions_root()) {
    transactions_root_ = new ::bc::Hash(*from.transactions_root_);
  } else {
    transactions_root_ = NULL;
  }
  if (from.has_transaction_status_hash()) {
    transaction_status_hash_ = new ::bc::Hash(*from.transaction_status_hash_);
  } else {
    transaction_status_hash_ = NULL;
  }
  if (from.has_transaction_status()) {
    transaction_status_ = new ::bc::TransactionStatus(*from.transaction_status_);
  } else {
    transaction_status_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&bits_) -
    reinterpret_cast<char*>(&version_)) + sizeof(bits_));
  // @@protoc_insertion_point(copy_constructor:bc.BlockHeader)
}

void BlockHeader::SharedCtor() {
  ::memset(&previous_block_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_) -
      reinterpret_cast<char*>(&previous_block_id_)) + sizeof(bits_));
  _cached_size_ = 0;
}

BlockHeader::~BlockHeader() {
  // @@protoc_insertion_point(destructor:bc.BlockHeader)
  SharedDtor();
}

void BlockHeader::SharedDtor() {
  if (this != internal_default_instance()) delete previous_block_id_;
  if (this != internal_default_instance()) delete transactions_root_;
  if (this != internal_default_instance()) delete transaction_status_hash_;
  if (this != internal_default_instance()) delete transaction_status_;
}

void BlockHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockHeader::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockHeader& BlockHeader::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsBlockHeader();
  return *internal_default_instance();
}

BlockHeader* BlockHeader::New(::google::protobuf::Arena* arena) const {
  BlockHeader* n = new BlockHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && previous_block_id_ != NULL) {
    delete previous_block_id_;
  }
  previous_block_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && transactions_root_ != NULL) {
    delete transactions_root_;
  }
  transactions_root_ = NULL;
  if (GetArenaNoVirtual() == NULL && transaction_status_hash_ != NULL) {
    delete transaction_status_hash_;
  }
  transaction_status_hash_ = NULL;
  if (GetArenaNoVirtual() == NULL && transaction_status_ != NULL) {
    delete transaction_status_;
  }
  transaction_status_ = NULL;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_) -
      reinterpret_cast<char*>(&version_)) + sizeof(bits_));
  _internal_metadata_.Clear();
}

bool BlockHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.BlockHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.Hash previous_block_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_previous_block_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.Hash transactions_root = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transactions_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.Hash transaction_status_hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction_status_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bits = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.TransactionStatus transaction_status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.BlockHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.BlockHeader)
  return false;
#undef DO_
}

void BlockHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->version(), output);
  }

  // uint64 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->height(), output);
  }

  // .bc.Hash previous_block_id = 3;
  if (this->has_previous_block_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->previous_block_id_, output);
  }

  // uint64 timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->timestamp(), output);
  }

  // .bc.Hash transactions_root = 5;
  if (this->has_transactions_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->transactions_root_, output);
  }

  // .bc.Hash transaction_status_hash = 6;
  if (this->has_transaction_status_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->transaction_status_hash_, output);
  }

  // uint64 nonce = 7;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->nonce(), output);
  }

  // uint64 bits = 8;
  if (this->bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->bits(), output);
  }

  // .bc.TransactionStatus transaction_status = 9;
  if (this->has_transaction_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->transaction_status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.BlockHeader)
}

::google::protobuf::uint8* BlockHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->version(), target);
  }

  // uint64 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->height(), target);
  }

  // .bc.Hash previous_block_id = 3;
  if (this->has_previous_block_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->previous_block_id_, deterministic, target);
  }

  // uint64 timestamp = 4;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->timestamp(), target);
  }

  // .bc.Hash transactions_root = 5;
  if (this->has_transactions_root()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->transactions_root_, deterministic, target);
  }

  // .bc.Hash transaction_status_hash = 6;
  if (this->has_transaction_status_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->transaction_status_hash_, deterministic, target);
  }

  // uint64 nonce = 7;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->nonce(), target);
  }

  // uint64 bits = 8;
  if (this->bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->bits(), target);
  }

  // .bc.TransactionStatus transaction_status = 9;
  if (this->has_transaction_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->transaction_status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.BlockHeader)
  return target;
}

size_t BlockHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.BlockHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.Hash previous_block_id = 3;
  if (this->has_previous_block_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->previous_block_id_);
  }

  // .bc.Hash transactions_root = 5;
  if (this->has_transactions_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transactions_root_);
  }

  // .bc.Hash transaction_status_hash = 6;
  if (this->has_transaction_status_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transaction_status_hash_);
  }

  // .bc.TransactionStatus transaction_status = 9;
  if (this->has_transaction_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transaction_status_);
  }

  // uint64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  // uint64 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  // uint64 timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint64 nonce = 7;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // uint64 bits = 8;
  if (this->bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.BlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.BlockHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.BlockHeader)
    MergeFrom(*source);
  }
}

void BlockHeader::MergeFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.BlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_previous_block_id()) {
    mutable_previous_block_id()->::bc::Hash::MergeFrom(from.previous_block_id());
  }
  if (from.has_transactions_root()) {
    mutable_transactions_root()->::bc::Hash::MergeFrom(from.transactions_root());
  }
  if (from.has_transaction_status_hash()) {
    mutable_transaction_status_hash()->::bc::Hash::MergeFrom(from.transaction_status_hash());
  }
  if (from.has_transaction_status()) {
    mutable_transaction_status()->::bc::TransactionStatus::MergeFrom(from.transaction_status());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.bits() != 0) {
    set_bits(from.bits());
  }
}

void BlockHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeader::CopyFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeader::IsInitialized() const {
  return true;
}

void BlockHeader::Swap(BlockHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockHeader::InternalSwap(BlockHeader* other) {
  using std::swap;
  swap(previous_block_id_, other->previous_block_id_);
  swap(transactions_root_, other->transactions_root_);
  swap(transaction_status_hash_, other->transaction_status_hash_);
  swap(transaction_status_, other->transaction_status_);
  swap(version_, other->version_);
  swap(height_, other->height_);
  swap(timestamp_, other->timestamp_);
  swap(nonce_, other->nonce_);
  swap(bits_, other->bits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockHeader::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxHeader::kVersionFieldNumber;
const int TxHeader::kSerializedSizeFieldNumber;
const int TxHeader::kTimeRangeFieldNumber;
const int TxHeader::kResultIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxHeader::TxHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsTxHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.TxHeader)
}
TxHeader::TxHeader(const TxHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      result_ids_(from.result_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_range_) -
    reinterpret_cast<char*>(&version_)) + sizeof(time_range_));
  // @@protoc_insertion_point(copy_constructor:bc.TxHeader)
}

void TxHeader::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_range_) -
      reinterpret_cast<char*>(&version_)) + sizeof(time_range_));
  _cached_size_ = 0;
}

TxHeader::~TxHeader() {
  // @@protoc_insertion_point(destructor:bc.TxHeader)
  SharedDtor();
}

void TxHeader::SharedDtor() {
}

void TxHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxHeader::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxHeader& TxHeader::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsTxHeader();
  return *internal_default_instance();
}

TxHeader* TxHeader::New(::google::protobuf::Arena* arena) const {
  TxHeader* n = new TxHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.TxHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ids_.Clear();
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_range_) -
      reinterpret_cast<char*>(&version_)) + sizeof(time_range_));
  _internal_metadata_.Clear();
}

bool TxHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.TxHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serialized_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serialized_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bc.Hash result_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_result_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.TxHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.TxHeader)
  return false;
#undef DO_
}

void TxHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.TxHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->version(), output);
  }

  // uint64 serialized_size = 2;
  if (this->serialized_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serialized_size(), output);
  }

  // uint64 time_range = 3;
  if (this->time_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->time_range(), output);
  }

  // repeated .bc.Hash result_ids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->result_ids(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.TxHeader)
}

::google::protobuf::uint8* TxHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.TxHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->version(), target);
  }

  // uint64 serialized_size = 2;
  if (this->serialized_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serialized_size(), target);
  }

  // uint64 time_range = 3;
  if (this->time_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->time_range(), target);
  }

  // repeated .bc.Hash result_ids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->result_ids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.TxHeader)
  return target;
}

size_t TxHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.TxHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bc.Hash result_ids = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->result_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->result_ids(static_cast<int>(i)));
    }
  }

  // uint64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  // uint64 serialized_size = 2;
  if (this->serialized_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serialized_size());
  }

  // uint64 time_range = 3;
  if (this->time_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time_range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.TxHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const TxHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.TxHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.TxHeader)
    MergeFrom(*source);
  }
}

void TxHeader::MergeFrom(const TxHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.TxHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_ids_.MergeFrom(from.result_ids_);
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serialized_size() != 0) {
    set_serialized_size(from.serialized_size());
  }
  if (from.time_range() != 0) {
    set_time_range(from.time_range());
  }
}

void TxHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.TxHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxHeader::CopyFrom(const TxHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.TxHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxHeader::IsInitialized() const {
  return true;
}

void TxHeader::Swap(TxHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxHeader::InternalSwap(TxHeader* other) {
  using std::swap;
  result_ids_.InternalSwap(&other->result_ids_);
  swap(version_, other->version_);
  swap(serialized_size_, other->serialized_size_);
  swap(time_range_, other->time_range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxHeader::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxVerifyResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxVerifyResult::kStatusFailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxVerifyResult::TxVerifyResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsTxVerifyResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.TxVerifyResult)
}
TxVerifyResult::TxVerifyResult(const TxVerifyResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_fail_ = from.status_fail_;
  // @@protoc_insertion_point(copy_constructor:bc.TxVerifyResult)
}

void TxVerifyResult::SharedCtor() {
  status_fail_ = false;
  _cached_size_ = 0;
}

TxVerifyResult::~TxVerifyResult() {
  // @@protoc_insertion_point(destructor:bc.TxVerifyResult)
  SharedDtor();
}

void TxVerifyResult::SharedDtor() {
}

void TxVerifyResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxVerifyResult::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxVerifyResult& TxVerifyResult::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsTxVerifyResult();
  return *internal_default_instance();
}

TxVerifyResult* TxVerifyResult::New(::google::protobuf::Arena* arena) const {
  TxVerifyResult* n = new TxVerifyResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxVerifyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.TxVerifyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_fail_ = false;
  _internal_metadata_.Clear();
}

bool TxVerifyResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.TxVerifyResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status_fail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_fail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.TxVerifyResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.TxVerifyResult)
  return false;
#undef DO_
}

void TxVerifyResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.TxVerifyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status_fail = 1;
  if (this->status_fail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status_fail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.TxVerifyResult)
}

::google::protobuf::uint8* TxVerifyResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.TxVerifyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status_fail = 1;
  if (this->status_fail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status_fail(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.TxVerifyResult)
  return target;
}

size_t TxVerifyResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.TxVerifyResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool status_fail = 1;
  if (this->status_fail() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxVerifyResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.TxVerifyResult)
  GOOGLE_DCHECK_NE(&from, this);
  const TxVerifyResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxVerifyResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.TxVerifyResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.TxVerifyResult)
    MergeFrom(*source);
  }
}

void TxVerifyResult::MergeFrom(const TxVerifyResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.TxVerifyResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status_fail() != 0) {
    set_status_fail(from.status_fail());
  }
}

void TxVerifyResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.TxVerifyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxVerifyResult::CopyFrom(const TxVerifyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.TxVerifyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxVerifyResult::IsInitialized() const {
  return true;
}

void TxVerifyResult::Swap(TxVerifyResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxVerifyResult::InternalSwap(TxVerifyResult* other) {
  using std::swap;
  swap(status_fail_, other->status_fail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxVerifyResult::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionStatus::kVersionFieldNumber;
const int TransactionStatus::kVerifyStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionStatus::TransactionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsTransactionStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.TransactionStatus)
}
TransactionStatus::TransactionStatus(const TransactionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      verify_status_(from.verify_status_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:bc.TransactionStatus)
}

void TransactionStatus::SharedCtor() {
  version_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TransactionStatus::~TransactionStatus() {
  // @@protoc_insertion_point(destructor:bc.TransactionStatus)
  SharedDtor();
}

void TransactionStatus::SharedDtor() {
}

void TransactionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionStatus::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionStatus& TransactionStatus::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsTransactionStatus();
  return *internal_default_instance();
}

TransactionStatus* TransactionStatus::New(::google::protobuf::Arena* arena) const {
  TransactionStatus* n = new TransactionStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.TransactionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  verify_status_.Clear();
  version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransactionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.TransactionStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bc.TxVerifyResult verify_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_verify_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.TransactionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.TransactionStatus)
  return false;
#undef DO_
}

void TransactionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.TransactionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->version(), output);
  }

  // repeated .bc.TxVerifyResult verify_status = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->verify_status(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.TransactionStatus)
}

::google::protobuf::uint8* TransactionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.TransactionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->version(), target);
  }

  // repeated .bc.TxVerifyResult verify_status = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->verify_status(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.TransactionStatus)
  return target;
}

size_t TransactionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.TransactionStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bc.TxVerifyResult verify_status = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->verify_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->verify_status(static_cast<int>(i)));
    }
  }

  // uint64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.TransactionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.TransactionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.TransactionStatus)
    MergeFrom(*source);
  }
}

void TransactionStatus::MergeFrom(const TransactionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.TransactionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  verify_status_.MergeFrom(from.verify_status_);
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void TransactionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.TransactionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionStatus::CopyFrom(const TransactionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.TransactionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionStatus::IsInitialized() const {
  return true;
}

void TransactionStatus::Swap(TransactionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionStatus::InternalSwap(TransactionStatus* other) {
  using std::swap;
  verify_status_.InternalSwap(&other->verify_status_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionStatus::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mux::InitAsDefaultInstance() {
  ::bc::_Mux_default_instance_._instance.get_mutable()->program_ = const_cast< ::bc::Program*>(
      ::bc::Program::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mux::kSourcesFieldNumber;
const int Mux::kProgramFieldNumber;
const int Mux::kWitnessDestinationsFieldNumber;
const int Mux::kWitnessArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mux::Mux()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsMux();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Mux)
}
Mux::Mux(const Mux& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sources_(from.sources_),
      witness_destinations_(from.witness_destinations_),
      witness_arguments_(from.witness_arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_program()) {
    program_ = new ::bc::Program(*from.program_);
  } else {
    program_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bc.Mux)
}

void Mux::SharedCtor() {
  program_ = NULL;
  _cached_size_ = 0;
}

Mux::~Mux() {
  // @@protoc_insertion_point(destructor:bc.Mux)
  SharedDtor();
}

void Mux::SharedDtor() {
  if (this != internal_default_instance()) delete program_;
}

void Mux::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mux::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mux& Mux::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsMux();
  return *internal_default_instance();
}

Mux* Mux::New(::google::protobuf::Arena* arena) const {
  Mux* n = new Mux;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mux::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Mux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sources_.Clear();
  witness_destinations_.Clear();
  witness_arguments_.Clear();
  if (GetArenaNoVirtual() == NULL && program_ != NULL) {
    delete program_;
  }
  program_ = NULL;
  _internal_metadata_.Clear();
}

bool Mux::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Mux)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bc.ValueSource sources = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.Program program = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bc.ValueDestination witness_destinations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_witness_destinations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes witness_arguments = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_witness_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Mux)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Mux)
  return false;
#undef DO_
}

void Mux::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Mux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bc.ValueSource sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sources(static_cast<int>(i)), output);
  }

  // .bc.Program program = 2;
  if (this->has_program()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->program_, output);
  }

  // repeated .bc.ValueDestination witness_destinations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->witness_destinations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->witness_destinations(static_cast<int>(i)), output);
  }

  // repeated bytes witness_arguments = 4;
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->witness_arguments(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Mux)
}

::google::protobuf::uint8* Mux::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Mux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bc.ValueSource sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sources(static_cast<int>(i)), deterministic, target);
  }

  // .bc.Program program = 2;
  if (this->has_program()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->program_, deterministic, target);
  }

  // repeated .bc.ValueDestination witness_destinations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->witness_destinations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->witness_destinations(static_cast<int>(i)), deterministic, target);
  }

  // repeated bytes witness_arguments = 4;
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->witness_arguments(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Mux)
  return target;
}

size_t Mux::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Mux)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bc.ValueSource sources = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sources(static_cast<int>(i)));
    }
  }

  // repeated .bc.ValueDestination witness_destinations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->witness_destinations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->witness_destinations(static_cast<int>(i)));
    }
  }

  // repeated bytes witness_arguments = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->witness_arguments_size());
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->witness_arguments(i));
  }

  // .bc.Program program = 2;
  if (this->has_program()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->program_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mux::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Mux)
  GOOGLE_DCHECK_NE(&from, this);
  const Mux* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mux>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Mux)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Mux)
    MergeFrom(*source);
  }
}

void Mux::MergeFrom(const Mux& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Mux)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sources_.MergeFrom(from.sources_);
  witness_destinations_.MergeFrom(from.witness_destinations_);
  witness_arguments_.MergeFrom(from.witness_arguments_);
  if (from.has_program()) {
    mutable_program()->::bc::Program::MergeFrom(from.program());
  }
}

void Mux::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Mux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mux::CopyFrom(const Mux& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Mux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mux::IsInitialized() const {
  return true;
}

void Mux::Swap(Mux* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mux::InternalSwap(Mux* other) {
  using std::swap;
  sources_.InternalSwap(&other->sources_);
  witness_destinations_.InternalSwap(&other->witness_destinations_);
  witness_arguments_.InternalSwap(&other->witness_arguments_);
  swap(program_, other->program_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mux::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Coinbase::InitAsDefaultInstance() {
  ::bc::_Coinbase_default_instance_._instance.get_mutable()->witness_destination_ = const_cast< ::bc::ValueDestination*>(
      ::bc::ValueDestination::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coinbase::kWitnessDestinationFieldNumber;
const int Coinbase::kArbitraryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coinbase::Coinbase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsCoinbase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Coinbase)
}
Coinbase::Coinbase(const Coinbase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arbitrary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arbitrary().size() > 0) {
    arbitrary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arbitrary_);
  }
  if (from.has_witness_destination()) {
    witness_destination_ = new ::bc::ValueDestination(*from.witness_destination_);
  } else {
    witness_destination_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bc.Coinbase)
}

void Coinbase::SharedCtor() {
  arbitrary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  witness_destination_ = NULL;
  _cached_size_ = 0;
}

Coinbase::~Coinbase() {
  // @@protoc_insertion_point(destructor:bc.Coinbase)
  SharedDtor();
}

void Coinbase::SharedDtor() {
  arbitrary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete witness_destination_;
}

void Coinbase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Coinbase::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Coinbase& Coinbase::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsCoinbase();
  return *internal_default_instance();
}

Coinbase* Coinbase::New(::google::protobuf::Arena* arena) const {
  Coinbase* n = new Coinbase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Coinbase::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Coinbase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arbitrary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && witness_destination_ != NULL) {
    delete witness_destination_;
  }
  witness_destination_ = NULL;
  _internal_metadata_.Clear();
}

bool Coinbase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Coinbase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.ValueDestination witness_destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_witness_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes arbitrary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_arbitrary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Coinbase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Coinbase)
  return false;
#undef DO_
}

void Coinbase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Coinbase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.ValueDestination witness_destination = 1;
  if (this->has_witness_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->witness_destination_, output);
  }

  // bytes arbitrary = 2;
  if (this->arbitrary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->arbitrary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Coinbase)
}

::google::protobuf::uint8* Coinbase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Coinbase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.ValueDestination witness_destination = 1;
  if (this->has_witness_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->witness_destination_, deterministic, target);
  }

  // bytes arbitrary = 2;
  if (this->arbitrary().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->arbitrary(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Coinbase)
  return target;
}

size_t Coinbase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Coinbase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes arbitrary = 2;
  if (this->arbitrary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->arbitrary());
  }

  // .bc.ValueDestination witness_destination = 1;
  if (this->has_witness_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->witness_destination_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Coinbase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Coinbase)
  GOOGLE_DCHECK_NE(&from, this);
  const Coinbase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coinbase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Coinbase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Coinbase)
    MergeFrom(*source);
  }
}

void Coinbase::MergeFrom(const Coinbase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Coinbase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arbitrary().size() > 0) {

    arbitrary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arbitrary_);
  }
  if (from.has_witness_destination()) {
    mutable_witness_destination()->::bc::ValueDestination::MergeFrom(from.witness_destination());
  }
}

void Coinbase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Coinbase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coinbase::CopyFrom(const Coinbase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Coinbase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coinbase::IsInitialized() const {
  return true;
}

void Coinbase::Swap(Coinbase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coinbase::InternalSwap(Coinbase* other) {
  using std::swap;
  arbitrary_.Swap(&other->arbitrary_);
  swap(witness_destination_, other->witness_destination_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Coinbase::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Output::InitAsDefaultInstance() {
  ::bc::_Output_default_instance_._instance.get_mutable()->source_ = const_cast< ::bc::ValueSource*>(
      ::bc::ValueSource::internal_default_instance());
  ::bc::_Output_default_instance_._instance.get_mutable()->control_program_ = const_cast< ::bc::Program*>(
      ::bc::Program::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Output::kSourceFieldNumber;
const int Output::kControlProgramFieldNumber;
const int Output::kOrdinalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Output::Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsOutput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Output)
}
Output::Output(const Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::bc::ValueSource(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_control_program()) {
    control_program_ = new ::bc::Program(*from.control_program_);
  } else {
    control_program_ = NULL;
  }
  ordinal_ = from.ordinal_;
  // @@protoc_insertion_point(copy_constructor:bc.Output)
}

void Output::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ordinal_) -
      reinterpret_cast<char*>(&source_)) + sizeof(ordinal_));
  _cached_size_ = 0;
}

Output::~Output() {
  // @@protoc_insertion_point(destructor:bc.Output)
  SharedDtor();
}

void Output::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete control_program_;
}

void Output::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Output::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Output& Output::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsOutput();
  return *internal_default_instance();
}

Output* Output::New(::google::protobuf::Arena* arena) const {
  Output* n = new Output;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Output::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && control_program_ != NULL) {
    delete control_program_;
  }
  control_program_ = NULL;
  ordinal_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Output)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.ValueSource source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.Program control_program = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ordinal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Output)
  return false;
#undef DO_
}

void Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.ValueSource source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->source_, output);
  }

  // .bc.Program control_program = 2;
  if (this->has_control_program()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->control_program_, output);
  }

  // uint64 ordinal = 3;
  if (this->ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ordinal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Output)
}

::google::protobuf::uint8* Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.ValueSource source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->source_, deterministic, target);
  }

  // .bc.Program control_program = 2;
  if (this->has_control_program()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->control_program_, deterministic, target);
  }

  // uint64 ordinal = 3;
  if (this->ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ordinal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Output)
  return target;
}

size_t Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.ValueSource source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_);
  }

  // .bc.Program control_program = 2;
  if (this->has_control_program()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->control_program_);
  }

  // uint64 ordinal = 3;
  if (this->ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordinal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Output)
    MergeFrom(*source);
  }
}

void Output::MergeFrom(const Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    mutable_source()->::bc::ValueSource::MergeFrom(from.source());
  }
  if (from.has_control_program()) {
    mutable_control_program()->::bc::Program::MergeFrom(from.control_program());
  }
  if (from.ordinal() != 0) {
    set_ordinal(from.ordinal());
  }
}

void Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Output::CopyFrom(const Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Output::IsInitialized() const {
  return true;
}

void Output::Swap(Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Output::InternalSwap(Output* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(control_program_, other->control_program_);
  swap(ordinal_, other->ordinal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Output::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Retirement::InitAsDefaultInstance() {
  ::bc::_Retirement_default_instance_._instance.get_mutable()->source_ = const_cast< ::bc::ValueSource*>(
      ::bc::ValueSource::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Retirement::kSourceFieldNumber;
const int Retirement::kOrdinalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Retirement::Retirement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsRetirement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Retirement)
}
Retirement::Retirement(const Retirement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::bc::ValueSource(*from.source_);
  } else {
    source_ = NULL;
  }
  ordinal_ = from.ordinal_;
  // @@protoc_insertion_point(copy_constructor:bc.Retirement)
}

void Retirement::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ordinal_) -
      reinterpret_cast<char*>(&source_)) + sizeof(ordinal_));
  _cached_size_ = 0;
}

Retirement::~Retirement() {
  // @@protoc_insertion_point(destructor:bc.Retirement)
  SharedDtor();
}

void Retirement::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
}

void Retirement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Retirement::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Retirement& Retirement::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsRetirement();
  return *internal_default_instance();
}

Retirement* Retirement::New(::google::protobuf::Arena* arena) const {
  Retirement* n = new Retirement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Retirement::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Retirement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  ordinal_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Retirement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Retirement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.ValueSource source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ordinal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Retirement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Retirement)
  return false;
#undef DO_
}

void Retirement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Retirement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.ValueSource source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->source_, output);
  }

  // uint64 ordinal = 2;
  if (this->ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ordinal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Retirement)
}

::google::protobuf::uint8* Retirement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Retirement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.ValueSource source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->source_, deterministic, target);
  }

  // uint64 ordinal = 2;
  if (this->ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ordinal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Retirement)
  return target;
}

size_t Retirement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Retirement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bc.ValueSource source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_);
  }

  // uint64 ordinal = 2;
  if (this->ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordinal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Retirement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Retirement)
  GOOGLE_DCHECK_NE(&from, this);
  const Retirement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Retirement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Retirement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Retirement)
    MergeFrom(*source);
  }
}

void Retirement::MergeFrom(const Retirement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Retirement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    mutable_source()->::bc::ValueSource::MergeFrom(from.source());
  }
  if (from.ordinal() != 0) {
    set_ordinal(from.ordinal());
  }
}

void Retirement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Retirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Retirement::CopyFrom(const Retirement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Retirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Retirement::IsInitialized() const {
  return true;
}

void Retirement::Swap(Retirement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Retirement::InternalSwap(Retirement* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(ordinal_, other->ordinal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Retirement::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Issuance::InitAsDefaultInstance() {
  ::bc::_Issuance_default_instance_._instance.get_mutable()->nonce_hash_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_Issuance_default_instance_._instance.get_mutable()->value_ = const_cast< ::bc::AssetAmount*>(
      ::bc::AssetAmount::internal_default_instance());
  ::bc::_Issuance_default_instance_._instance.get_mutable()->witness_destination_ = const_cast< ::bc::ValueDestination*>(
      ::bc::ValueDestination::internal_default_instance());
  ::bc::_Issuance_default_instance_._instance.get_mutable()->witness_asset_definition_ = const_cast< ::bc::AssetDefinition*>(
      ::bc::AssetDefinition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Issuance::kNonceHashFieldNumber;
const int Issuance::kValueFieldNumber;
const int Issuance::kWitnessDestinationFieldNumber;
const int Issuance::kWitnessAssetDefinitionFieldNumber;
const int Issuance::kWitnessArgumentsFieldNumber;
const int Issuance::kOrdinalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Issuance::Issuance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsIssuance();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Issuance)
}
Issuance::Issuance(const Issuance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      witness_arguments_(from.witness_arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nonce_hash()) {
    nonce_hash_ = new ::bc::Hash(*from.nonce_hash_);
  } else {
    nonce_hash_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::bc::AssetAmount(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_witness_destination()) {
    witness_destination_ = new ::bc::ValueDestination(*from.witness_destination_);
  } else {
    witness_destination_ = NULL;
  }
  if (from.has_witness_asset_definition()) {
    witness_asset_definition_ = new ::bc::AssetDefinition(*from.witness_asset_definition_);
  } else {
    witness_asset_definition_ = NULL;
  }
  ordinal_ = from.ordinal_;
  // @@protoc_insertion_point(copy_constructor:bc.Issuance)
}

void Issuance::SharedCtor() {
  ::memset(&nonce_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ordinal_) -
      reinterpret_cast<char*>(&nonce_hash_)) + sizeof(ordinal_));
  _cached_size_ = 0;
}

Issuance::~Issuance() {
  // @@protoc_insertion_point(destructor:bc.Issuance)
  SharedDtor();
}

void Issuance::SharedDtor() {
  if (this != internal_default_instance()) delete nonce_hash_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete witness_destination_;
  if (this != internal_default_instance()) delete witness_asset_definition_;
}

void Issuance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Issuance::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Issuance& Issuance::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsIssuance();
  return *internal_default_instance();
}

Issuance* Issuance::New(::google::protobuf::Arena* arena) const {
  Issuance* n = new Issuance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Issuance::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Issuance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  witness_arguments_.Clear();
  if (GetArenaNoVirtual() == NULL && nonce_hash_ != NULL) {
    delete nonce_hash_;
  }
  nonce_hash_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && witness_destination_ != NULL) {
    delete witness_destination_;
  }
  witness_destination_ = NULL;
  if (GetArenaNoVirtual() == NULL && witness_asset_definition_ != NULL) {
    delete witness_asset_definition_;
  }
  witness_asset_definition_ = NULL;
  ordinal_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Issuance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Issuance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.Hash nonce_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nonce_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.AssetAmount value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.ValueDestination witness_destination = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_witness_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.AssetDefinition witness_asset_definition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_witness_asset_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes witness_arguments = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_witness_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ordinal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Issuance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Issuance)
  return false;
#undef DO_
}

void Issuance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Issuance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash nonce_hash = 1;
  if (this->has_nonce_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nonce_hash_, output);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // .bc.ValueDestination witness_destination = 3;
  if (this->has_witness_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->witness_destination_, output);
  }

  // .bc.AssetDefinition witness_asset_definition = 4;
  if (this->has_witness_asset_definition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->witness_asset_definition_, output);
  }

  // repeated bytes witness_arguments = 5;
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->witness_arguments(i), output);
  }

  // uint64 ordinal = 6;
  if (this->ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ordinal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Issuance)
}

::google::protobuf::uint8* Issuance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Issuance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash nonce_hash = 1;
  if (this->has_nonce_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->nonce_hash_, deterministic, target);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->value_, deterministic, target);
  }

  // .bc.ValueDestination witness_destination = 3;
  if (this->has_witness_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->witness_destination_, deterministic, target);
  }

  // .bc.AssetDefinition witness_asset_definition = 4;
  if (this->has_witness_asset_definition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->witness_asset_definition_, deterministic, target);
  }

  // repeated bytes witness_arguments = 5;
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(5, this->witness_arguments(i), target);
  }

  // uint64 ordinal = 6;
  if (this->ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ordinal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Issuance)
  return target;
}

size_t Issuance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Issuance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes witness_arguments = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->witness_arguments_size());
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->witness_arguments(i));
  }

  // .bc.Hash nonce_hash = 1;
  if (this->has_nonce_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->nonce_hash_);
  }

  // .bc.AssetAmount value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  // .bc.ValueDestination witness_destination = 3;
  if (this->has_witness_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->witness_destination_);
  }

  // .bc.AssetDefinition witness_asset_definition = 4;
  if (this->has_witness_asset_definition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->witness_asset_definition_);
  }

  // uint64 ordinal = 6;
  if (this->ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordinal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Issuance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Issuance)
  GOOGLE_DCHECK_NE(&from, this);
  const Issuance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Issuance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Issuance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Issuance)
    MergeFrom(*source);
  }
}

void Issuance::MergeFrom(const Issuance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Issuance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  witness_arguments_.MergeFrom(from.witness_arguments_);
  if (from.has_nonce_hash()) {
    mutable_nonce_hash()->::bc::Hash::MergeFrom(from.nonce_hash());
  }
  if (from.has_value()) {
    mutable_value()->::bc::AssetAmount::MergeFrom(from.value());
  }
  if (from.has_witness_destination()) {
    mutable_witness_destination()->::bc::ValueDestination::MergeFrom(from.witness_destination());
  }
  if (from.has_witness_asset_definition()) {
    mutable_witness_asset_definition()->::bc::AssetDefinition::MergeFrom(from.witness_asset_definition());
  }
  if (from.ordinal() != 0) {
    set_ordinal(from.ordinal());
  }
}

void Issuance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Issuance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Issuance::CopyFrom(const Issuance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Issuance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Issuance::IsInitialized() const {
  return true;
}

void Issuance::Swap(Issuance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Issuance::InternalSwap(Issuance* other) {
  using std::swap;
  witness_arguments_.InternalSwap(&other->witness_arguments_);
  swap(nonce_hash_, other->nonce_hash_);
  swap(value_, other->value_);
  swap(witness_destination_, other->witness_destination_);
  swap(witness_asset_definition_, other->witness_asset_definition_);
  swap(ordinal_, other->ordinal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Issuance::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Spend::InitAsDefaultInstance() {
  ::bc::_Spend_default_instance_._instance.get_mutable()->spent_output_id_ = const_cast< ::bc::Hash*>(
      ::bc::Hash::internal_default_instance());
  ::bc::_Spend_default_instance_._instance.get_mutable()->witness_destination_ = const_cast< ::bc::ValueDestination*>(
      ::bc::ValueDestination::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Spend::kSpentOutputIdFieldNumber;
const int Spend::kWitnessDestinationFieldNumber;
const int Spend::kWitnessArgumentsFieldNumber;
const int Spend::kOrdinalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Spend::Spend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bc_2eproto::InitDefaultsSpend();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bc.Spend)
}
Spend::Spend(const Spend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      witness_arguments_(from.witness_arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spent_output_id()) {
    spent_output_id_ = new ::bc::Hash(*from.spent_output_id_);
  } else {
    spent_output_id_ = NULL;
  }
  if (from.has_witness_destination()) {
    witness_destination_ = new ::bc::ValueDestination(*from.witness_destination_);
  } else {
    witness_destination_ = NULL;
  }
  ordinal_ = from.ordinal_;
  // @@protoc_insertion_point(copy_constructor:bc.Spend)
}

void Spend::SharedCtor() {
  ::memset(&spent_output_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ordinal_) -
      reinterpret_cast<char*>(&spent_output_id_)) + sizeof(ordinal_));
  _cached_size_ = 0;
}

Spend::~Spend() {
  // @@protoc_insertion_point(destructor:bc.Spend)
  SharedDtor();
}

void Spend::SharedDtor() {
  if (this != internal_default_instance()) delete spent_output_id_;
  if (this != internal_default_instance()) delete witness_destination_;
}

void Spend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Spend::descriptor() {
  ::protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Spend& Spend::default_instance() {
  ::protobuf_bc_2eproto::InitDefaultsSpend();
  return *internal_default_instance();
}

Spend* Spend::New(::google::protobuf::Arena* arena) const {
  Spend* n = new Spend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Spend::Clear() {
// @@protoc_insertion_point(message_clear_start:bc.Spend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  witness_arguments_.Clear();
  if (GetArenaNoVirtual() == NULL && spent_output_id_ != NULL) {
    delete spent_output_id_;
  }
  spent_output_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && witness_destination_ != NULL) {
    delete witness_destination_;
  }
  witness_destination_ = NULL;
  ordinal_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Spend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bc.Spend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bc.Hash spent_output_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spent_output_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bc.ValueDestination witness_destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_witness_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes witness_arguments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_witness_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ordinal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bc.Spend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bc.Spend)
  return false;
#undef DO_
}

void Spend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bc.Spend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash spent_output_id = 1;
  if (this->has_spent_output_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->spent_output_id_, output);
  }

  // .bc.ValueDestination witness_destination = 2;
  if (this->has_witness_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->witness_destination_, output);
  }

  // repeated bytes witness_arguments = 3;
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->witness_arguments(i), output);
  }

  // uint64 ordinal = 4;
  if (this->ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ordinal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bc.Spend)
}

::google::protobuf::uint8* Spend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bc.Spend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bc.Hash spent_output_id = 1;
  if (this->has_spent_output_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->spent_output_id_, deterministic, target);
  }

  // .bc.ValueDestination witness_destination = 2;
  if (this->has_witness_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->witness_destination_, deterministic, target);
  }

  // repeated bytes witness_arguments = 3;
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->witness_arguments(i), target);
  }

  // uint64 ordinal = 4;
  if (this->ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ordinal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bc.Spend)
  return target;
}

size_t Spend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bc.Spend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes witness_arguments = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->witness_arguments_size());
  for (int i = 0, n = this->witness_arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->witness_arguments(i));
  }

  // .bc.Hash spent_output_id = 1;
  if (this->has_spent_output_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->spent_output_id_);
  }

  // .bc.ValueDestination witness_destination = 2;
  if (this->has_witness_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->witness_destination_);
  }

  // uint64 ordinal = 4;
  if (this->ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordinal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Spend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bc.Spend)
  GOOGLE_DCHECK_NE(&from, this);
  const Spend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Spend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bc.Spend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bc.Spend)
    MergeFrom(*source);
  }
}

void Spend::MergeFrom(const Spend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bc.Spend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  witness_arguments_.MergeFrom(from.witness_arguments_);
  if (from.has_spent_output_id()) {
    mutable_spent_output_id()->::bc::Hash::MergeFrom(from.spent_output_id());
  }
  if (from.has_witness_destination()) {
    mutable_witness_destination()->::bc::ValueDestination::MergeFrom(from.witness_destination());
  }
  if (from.ordinal() != 0) {
    set_ordinal(from.ordinal());
  }
}

void Spend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bc.Spend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Spend::CopyFrom(const Spend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bc.Spend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Spend::IsInitialized() const {
  return true;
}

void Spend::Swap(Spend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Spend::InternalSwap(Spend* other) {
  using std::swap;
  witness_arguments_.InternalSwap(&other->witness_arguments_);
  swap(spent_output_id_, other->spent_output_id_);
  swap(witness_destination_, other->witness_destination_);
  swap(ordinal_, other->ordinal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Spend::GetMetadata() const {
  protobuf_bc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bc

// @@protoc_insertion_point(global_scope)
